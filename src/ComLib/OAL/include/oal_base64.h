/***************************************************************
模块 ： Base64加密解密                        
文件 ： oal_base64.h
作者 ： Ripple Lee(libozjw@163.com)
版本 ： V1.0
日期 ： 2017-01-18
*****************************************************************/
#ifndef __OAL_BASE64_H__
#define __OAL_BASE64_H__
#include "oal_typedef.h"

#ifdef __cplusplus
extern "C" {
#endif

/*****************************************************************************
* 函数名称: Base64encode_len
* 函数功能: 计算加密后文本长度
* 输入参数: len_plain_src-原始文本长度
* 输出参数: 无
* 函数返回: 长度值
******************************************************************************/
OAL_API int Base64encode_len(int len_plain_src);

/*****************************************************************************
* 函数名称: Base64encode
* 函数功能: Base64加密
* 输入参数: plain_src-原始文本 len_plain_src-原始文本长度
* 输出参数: coded_dst-加密后的文本
* 函数返回: 加密的长度
******************************************************************************/
OAL_API int Base64encode(char * coded_dst, const char *plain_src, int len_plain_src);

/*****************************************************************************
* 函数名称: Base64decode_len
* 函数功能: 计算解密以后的长度
* 输入参数: coded_src-加密后的文本
* 输出参数: 无
* 函数返回: 长度值
******************************************************************************/
OAL_API int Base64decode_len(const char * coded_src);

/*****************************************************************************
* 函数名称: Base64decode
* 函数功能: Base64解密
* 输入参数: coded_src-加密后的文本
* 输出参数: plain_dst-解密后的文本
* 函数返回: 解码后的长度
******************************************************************************/
OAL_API int Base64decode(char * plain_dst, const char *coded_src);

#ifdef __cplusplus
}
#endif


#endif //_BASE64_H_


